import { Link } from 'react-router-dom'
import emoji from 'react-easy-emoji'
import { title } from '../../components/publicodesUtils'
import { CardGrid } from './ListeActionPlus'
import personas from './personas.yaml'
import { utils } from 'publicodes'
import { ScrollToTop } from '../../components/utils/Scroll'
import { useDispatch, useSelector } from 'react-redux'
import { setDifferentSituation } from '../../actions/actions'
import CarbonImpact from './CarbonImpact'
import { useEngine } from '../../components/utils/EngineContext'
import SessionBar from '../../components/SessionBar'

export default () => {
	const dispatch = useDispatch(),
		objectif = 'bilan',
		engine = useEngine(),
		evaluation = engine.evaluate(objectif),
		configSet = useSelector((state) => state.simulation?.config)

	return (
		<div>
			<div className="ui__ container">
				<ScrollToTop />
				<h1>Personas</h1>
				<p>
					<em>Cliquez pour charger ce persona dans le simulateur.</em>
				</p>
				{configSet && <SessionBar />}
				<CardGrid>
					{personas.map(({ nom, ic√¥nes, data, description }) => (
						<li key={nom}>
							<div className="ui__ card">
								<Link
									to={'/personas'}
									onClick={() =>
										dispatch(
											setDifferentSituation({
												config: { objectifs: [objectif] },
												url: '/simulateur/bilan',
												situation: data,
												persona: nom,
											})
										)
									}
								>
									<div>{emoji(ic√¥nes || 'üë•')}</div>
									<div>{nom}</div>
								</Link>
								<p css=" overflow-x: scroll">
									<small>{description}</small>
								</p>
							</div>
						</li>
					))}
				</CardGrid>
				<p>
					Les personas nous permettront de prendre le parti d'une diversit√©
					d'utilisateurs quand ils voient notamment notre √©cran "passer √†
					l'action".
				</p>
				<h2>Comment cr√©er un persona ?</h2>
				<p>
					C'est dans le fichier{' '}
					<a href="https://github.com/pascalbes/monmatchcarbone-site/blob/master/source/sites/publicodes/personas.yaml">
						personas.yaml
					</a>{' '}
					que √ßa se passe. On peut soit copier coller les donn√©es d'un autre
					persona et les modifier, soit en cr√©er un de z√©ro depuis la
					simulation. Une fois la simulation satisfaisante, cliquer sur
					"Modifier mes r√©ponses" puis taper Ctrl-C, ouvrir la console du
					navigateur (F12), v√©rifiez bien que vous √™tes dans l'onglet "Console", allez tout en bas de la console (elle est un peu charg√©e...), puis copier le JSON affich√©, le coller dans{' '}
					<a href="https://www.json2yaml.com">cet outil</a> pour g√©n√©rer un
					YAML, puis l'ins√©rer dans personas.yaml.
				</p>

				<p>
					Pour les pr√©noms, on peut utiliser{' '}
					<a href="https://lorraine-hipseau.me">ce g√©n√©rateur</a>.
				</p>
			</div>
		</div>
	)
}
